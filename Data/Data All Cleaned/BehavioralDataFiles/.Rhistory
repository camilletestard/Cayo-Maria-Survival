data=read.csv(paste('output_allRegs_',session_list[session],'_',suffix,'.csv',sep=""))
data$session=session_list[session]
data.all = rbind(data.all,data)
}
data.all$monkey=substr(data.all$session,1,1)
View(data.all)
#Get the correct format for mdata
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
View(mdata)
which(mdata$variable=="Time")
mdata$var.type = "Task"
mdata$var.type[max(which(mdata$variable=="Time"))+1:nrow(mdata)] = "Mvmt"
#Add variable type
mdata$var.type = "Task"
max(which(mdata$variable=="Time"))
#Get the correct format for mdata
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
mdata <- mdata[-which(is.na(mdata$value)),]
#Add variable type
mdata$var.type = "Task"
max(which(mdata$variable=="Time"))+1
which(mdata$variable=="Time")
#Get the correct format for mdata
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
#Add variable type
mdata$var.type = "Task"
mdata$var.type[max(which(mdata$variable=="Time"))+1:nrow(mdata)] = "Mvmt"
nrow(mdata)
max(which(mdata$variable=="Time"))+1
max(which(mdata$variable=="Time"))+1:nrow(mdata)
mdata$var.type = "Task"
mdata$var.type[max(which(mdata$variable=="Time"))+1:nrow(mdata)] = "Mvmt"
mdata$var.type
max(which(mdata$variable=="Time"))+1:nrow(mdata)
"Mvmt"
test = mdata$var.type[max(which(mdata$variable=="Time"))+1:nrow(mdata)]
mdata$var.type[max(which(mdata$variable=="Time"))+1:nrow(mdata)] = "Mvmt"
#Add variable type
mdata$var.type = "Mvmt"
mdata$var.type[1:max(which(mdata$variable=="Time"))] = "Task"
#Remove NAs
mdata <- mdata[-which(is.na(mdata$value)),]
View(mdata)
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Task aligned"| mdata$Row=="Task indep."|
mdata$variable=="Full"| mdata$variable=="Full_task"), ]
mdata_mod$value[which(mdata_mod$Row=="Unique (dR^2)")] = -mdata_mod$value[mdata_mod$Row=="Unique (dR^2)"]
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Task aligned"| mdata$Row=="Task indep."|
mdata$variable=="Full"| mdata$variable=="Full_task"), ]
mdata_mod$value[which(mdata_mod$Row=="Unique (dR^2)")] = -mdata_mod$value[mdata_mod$Row=="Unique (dR^2)"]
for_sorting_task = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Task",]
agg_df = aggregate(for_sorting$value, list(for_sorting$variable), FUN=mean)
sorted_df = agg_df[order(agg_df$x),]
View(sorted_df)
for_sorting_task = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Task",]
agg_df = aggregate(for_sorting$value, list(for_sorting$variable), FUN=mean)
View(agg_df)
View(agg_df)
sorted_df = agg_df[order(agg_df$x),]
View(sorted_df)
#Get the correct format for mdata
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
#Add variable type
mdata$var.type = "Mvmt"
mdata$var.type[1:max(which(mdata$variable=="Time"))] = "Task"
#Remove NAs
mdata <- mdata[-which(is.na(mdata$value)),]
View(mdata)
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Task aligned"| mdata$Row=="Task indep."|
mdata$variable=="Full"| mdata$variable=="Full_task"), ]
mdata_mod$value[which(mdata_mod$Row=="Unique (dR^2)")] = -mdata_mod$value[mdata_mod$Row=="Unique (dR^2)"]
View(mdata_mod)
for_sorting_task = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Task",]
agg_df = aggregate(for_sorting_task$value, list(for_sorting_task$variable), FUN=mean)
sorted_df = agg_df[order(agg_df$x),]
View(sorted_df)
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Mvmt",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=mean)
sorted_df = agg_df[order(agg_df$x),]
var_levels_mvmt = sorted_df$Group.1
var_levels = c(var_levels_task, var_levels_mvmt)
var_levels_task = sorted_df$Group.1
for_sorting_task = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Task",]
agg_df = aggregate(for_sorting_task$value, list(for_sorting_task$variable), FUN=mean)
sorted_df = agg_df[order(agg_df$x),]
var_levels_task = sorted_df$Group.1
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Mvmt",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=mean)
sorted_df = agg_df[order(agg_df$x),]
var_levels_mvmt = sorted_df$Group.1
var_levels = c(var_levels_task, var_levels_mvmt)
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("green", "darkgreen"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
#Load libraries
library(ggplot2)
library(reshape2)
library(dplyr)
library(forcats)
#Get list of sessions, load results
#setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/')
# session_list = list.dirs(path = ".", full.names = TRUE, recursive = TRUE)
# session_list=substr(session_list[2:25],3,9)
#For now manually choose sessions of interest
# For Main task:
setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Main')
session_list = c("K190418",  "L030418",  "L080318",  "K200117",
"K230117",  "K200418",  "L180418",  "K220117",
"L220318",  "L250318",  "K230418",  "L260318",
"K020217",  "K260117",  "L270318",  "K050217",
"K300117")# K18:3; L18:7; K17:9 #K070217 K310117 missing
suffix='v10'
#For Head-fixed task:
# setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Head-fixed')
# session_list = c("L090318",  "L160318",  "L210318",
#                   "K190618",  "K240418",  "K250418")
# suffix='HF'
#
# var_levels = c("Correct.target","reward","Previous.Choice","Choice","Time","Target.Location","Success","Previous.success",
#                 "Cue.identity","Salient.task.events",'Eye.position',"Video_ME","Tail","Arm",
#                 "Video",'Cheek.position',"Brow.ridge",'Head.movements',"Head.position",
#                 "Nose",'Pupil.Size','Hands',"Eye.movements","Screen.Touches")
#For twist tasks:
# setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Twist')
# session_list = c("L140818",  "L180618",  "L210618",
#                  "K010818",  "K080818",  "K120818")
# suffix='twist'
# var_levels =c("Correct.target","reward","Previous.Choice","Choice","Success","Time","Previous.success",
#               "Cue.identity","Target.Location","Salient.task.events",'Eye.position',"Video_ME","Tail","Arm",
#               "Video",'Cheek.position',"Brow.ridge",'Hands','Head.movements',"Head.position",
#               "Nose",'Pupil.Size',"Eye.movements","Screen.Touches")
data.all=data.frame(); session=18
for (session in 1:length(session_list)){
data=read.csv(paste('output_allRegs_',session_list[session],'_',suffix,'.csv',sep=""))
data$session=session_list[session]
data.all = rbind(data.all,data)
}
data.all$monkey=substr(data.all$session,1,1)
#hist(data.all$Screen.Touches)
#write.csv(data.all,file="Results_Combined_allRegs.csv")
#Get the full model explained variance of specific movement variables, separated by monkey
mean(data.all$Salient.task.events[data.all$monkey=="K" & data.all$Row == "Full (cvR^2)"]) #For monkey K
mean(data.all$Salient.task.events[data.all$monkey=="L" & data.all$Row == "Full (cvR^2)"]) #For monkey L
mean(data.all$Screen.Touches[data.all$monkey=="K" & data.all$Row == "Full (cvR^2)"]) #For monkey K
mean(data.all$Screen.Touches[data.all$monkey=="L" & data.all$Row == "Full (cvR^2)"]) #For monkey L
mean(data.all$Eye[data.all$monkey=="K" & data.all$Row == "Unique (dR^2)"]) #For monkey K
mean(data.all$Eye[data.all$monkey=="L" & data.all$Row == "Unique (dR^2)"]) #For monkey L
# COMPARE UNIQUE VS FULL CONTRIBUTIONS FOR INDIVIDUAL REGRESSORS
#Get the correct format for mdata
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
#Add variable type
mdata$var.type = "Mvmt"
mdata$var.type[1:max(which(mdata$variable=="Time"))] = "Task"
#Remove NAs
mdata <- mdata[-which(is.na(mdata$value)),]
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Task aligned"| mdata$Row=="Task indep."|
mdata$variable=="Full"| mdata$variable=="Full_task"), ]
mdata_mod$value[which(mdata_mod$Row=="Unique (dR^2)")] = -mdata_mod$value[mdata_mod$Row=="Unique (dR^2)"]
for_sorting_task = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Task",]
agg_df = aggregate(for_sorting_task$value, list(for_sorting_task$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels_task = sorted_df$Group.1
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Mvmt",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels_mvmt = sorted_df$Group.1
var_levels = c(var_levels_task, var_levels_mvmt)
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("green", "darkgreen"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
ggsave(paste('allRegs_full_vs_unique',suffix,'.eps', sep=""))
ggsave(paste('allRegs_full_vs_unique',suffix,'.eps', sep=""))
# COMPARE TASK-ALIGNED and TASK-INDEPENDENT
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
mdata <- mdata[-which(is.na(mdata$value)),]
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Unique (dR^2)"|mdata$Row=="Full (cvR^2)"|
mdata$variable=="Full"),]
mdata_mod$value[which(mdata_mod$Row=="Task indep.")] = -mdata_mod$value[mdata_mod$Row=="Task indep."]
View(mdata_mod)
#Sort variables
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels= sorted_df$Group.1
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("cadetblue2", "blue"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
#Sort variables
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels= sorted_df$Group.1
View(sorted_df)
#Sort variables
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Task aligned",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels= as.character(sorted_df$Group.1)
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("cadetblue2", "blue"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
ggsave(paste('Aligned_vs_independent',suffix,'.eps', sep=""))
ggsave(paste('Aligned_vs_independent',suffix,'.eps', sep=""))
setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Head-fixed')
session_list = c("L090318",  "L160318",  "L210318",
"K190618",  "K240418",  "K250418")
suffix='HF'
data.all=data.frame(); session=18
for (session in 1:length(session_list)){
data=read.csv(paste('output_allRegs_',session_list[session],'_',suffix,'.csv',sep=""))
data$session=session_list[session]
data.all = rbind(data.all,data)
}
data.all$monkey=substr(data.all$session,1,1)
#Load libraries
library(ggplot2)
library(reshape2)
library(dplyr)
library(forcats)
#Get list of sessions, load results
#setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/')
# session_list = list.dirs(path = ".", full.names = TRUE, recursive = TRUE)
# session_list=substr(session_list[2:25],3,9)
#For now manually choose sessions of interest
# For Main task:
# setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Main')
# session_list = c("K190418",  "L030418",  "L080318",  "K200117",
#                  "K230117",  "K200418",  "L180418",  "K220117",
#                  "L220318",  "L250318",  "K230418",  "L260318",
#                  "K020217",  "K260117",  "L270318",  "K050217",
#                  "K300117")# K18:3; L18:7; K17:9 #K070217 K310117 missing
# suffix='v10'
#For Head-fixed task:
setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Head-fixed')
session_list = c("L090318",  "L160318",  "L210318",
"K190618",  "K240418",  "K250418")
suffix='HF'
#For twist tasks:
# setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Twist')
# session_list = c("L140818",  "L180618",  "L210618",
#                  "K010818",  "K080818",  "K120818")
# suffix='twist'
##############################################
#Combine results and plot them
data.all=data.frame(); session=18
for (session in 1:length(session_list)){
data=read.csv(paste('output_allRegs_',session_list[session],'_',suffix,'.csv',sep=""))
data$session=session_list[session]
data.all = rbind(data.all,data)
}
data.all$monkey=substr(data.all$session,1,1)
#hist(data.all$Screen.Touches)
#write.csv(data.all,file="Results_Combined_allRegs.csv")
#Get the full model explained variance of specific movement variables, separated by monkey
mean(data.all$Salient.task.events[data.all$monkey=="K" & data.all$Row == "Full (cvR^2)"]) #For monkey K
mean(data.all$Salient.task.events[data.all$monkey=="L" & data.all$Row == "Full (cvR^2)"]) #For monkey L
mean(data.all$Screen.Touches[data.all$monkey=="K" & data.all$Row == "Full (cvR^2)"]) #For monkey K
mean(data.all$Screen.Touches[data.all$monkey=="L" & data.all$Row == "Full (cvR^2)"]) #For monkey L
mean(data.all$Eye[data.all$monkey=="K" & data.all$Row == "Unique (dR^2)"]) #For monkey K
mean(data.all$Eye[data.all$monkey=="L" & data.all$Row == "Unique (dR^2)"]) #For monkey L
# COMPARE UNIQUE VS FULL CONTRIBUTIONS FOR INDIVIDUAL REGRESSORS
#Get the correct format for mdata
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
#Add variable type
mdata$var.type = "Mvmt"
mdata$var.type[1:max(which(mdata$variable=="Time"))] = "Task"
#Remove NAs
mdata <- mdata[-which(is.na(mdata$value)),]
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Task aligned"| mdata$Row=="Task indep."|
mdata$variable=="Full"| mdata$variable=="Full_task"), ]
mdata_mod$value[which(mdata_mod$Row=="Unique (dR^2)")] = -mdata_mod$value[mdata_mod$Row=="Unique (dR^2)"]
for_sorting_task = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Task",]
agg_df = aggregate(for_sorting_task$value, list(for_sorting_task$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels_task = sorted_df$Group.1
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Mvmt",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels_mvmt = sorted_df$Group.1
var_levels = c(var_levels_task, var_levels_mvmt)
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("green", "darkgreen"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
ggsave(paste('allRegs_full_vs_unique',suffix,'.eps', sep=""))
ggsave(paste('allRegs_full_vs_unique',suffix,'.eps', sep=""))
# COMPARE TASK-ALIGNED and TASK-INDEPENDENT
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
mdata <- mdata[-which(is.na(mdata$value)),]
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Unique (dR^2)"|mdata$Row=="Full (cvR^2)"|
mdata$variable=="Full"),]
mdata_mod$value[which(mdata_mod$Row=="Task indep.")] = -mdata_mod$value[mdata_mod$Row=="Task indep."]
#Sort variables
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Task aligned",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels= as.character(sorted_df$Group.1)
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("cadetblue2", "blue"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
ggsave(paste('Aligned_vs_independent',suffix,'.eps', sep=""))
ggsave(paste('Aligned_vs_independent',suffix,'.eps', sep=""))
setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Twist')
session_list = c("L140818",  "L180618",  "L210618",
"K010818",  "K080818",  "K120818")
suffix='twist'
setwd('~/Dropbox (Penn)/Churchland_Analysis/Wireless8a/Results/Per_regressor/Twist')
session_list = c("L140818",  "L180618",  "L210618",
"K010818",  "K080818",  "K120818")
suffix='twist'
data.all=data.frame(); session=18
for (session in 1:length(session_list)){
data=read.csv(paste('output_allRegs_',session_list[session],'_',suffix,'.csv',sep=""))
data$session=session_list[session]
data.all = rbind(data.all,data)
}
data.all$monkey=substr(data.all$session,1,1)
#hist(data.all$Screen.Touches)
#write.csv(data.all,file="Results_Combined_allRegs.csv")
#Get the full model explained variance of specific movement variables, separated by monkey
mean(data.all$Salient.task.events[data.all$monkey=="K" & data.all$Row == "Full (cvR^2)"]) #For monkey K
mean(data.all$Salient.task.events[data.all$monkey=="L" & data.all$Row == "Full (cvR^2)"]) #For monkey L
mean(data.all$Screen.Touches[data.all$monkey=="K" & data.all$Row == "Full (cvR^2)"]) #For monkey K
mean(data.all$Screen.Touches[data.all$monkey=="L" & data.all$Row == "Full (cvR^2)"]) #For monkey L
mean(data.all$Eye[data.all$monkey=="K" & data.all$Row == "Unique (dR^2)"]) #For monkey K
mean(data.all$Eye[data.all$monkey=="L" & data.all$Row == "Unique (dR^2)"]) #For monkey L
#Get the correct format for mdata
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
#Add variable type
mdata$var.type = "Mvmt"
mdata$var.type[1:max(which(mdata$variable=="Time"))] = "Task"
#Remove NAs
mdata <- mdata[-which(is.na(mdata$value)),]
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Task aligned"| mdata$Row=="Task indep."|
mdata$variable=="Full"| mdata$variable=="Full_task"), ]
mdata_mod$value[which(mdata_mod$Row=="Unique (dR^2)")] = -mdata_mod$value[mdata_mod$Row=="Unique (dR^2)"]
for_sorting_task = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Task",]
agg_df = aggregate(for_sorting_task$value, list(for_sorting_task$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels_task = sorted_df$Group.1
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Full (cvR^2)" & mdata_mod$var.type=="Mvmt",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels_mvmt = sorted_df$Group.1
var_levels = c(var_levels_task, var_levels_mvmt)
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("green", "darkgreen"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
ggsave(paste('allRegs_full_vs_unique',suffix,'.eps', sep=""))
ggsave(paste('allRegs_full_vs_unique',suffix,'.eps', sep=""))
# COMPARE TASK-ALIGNED and TASK-INDEPENDENT
mdata <- reshape2::melt(data.all, id.vars = c("monkey","session","Row"));
mdata <- mdata[-which(is.na(mdata$value)),]
#eliminate task dependent and independent for now:
mdata_mod = mdata[-which(mdata$Row=="Unique (dR^2)"|mdata$Row=="Full (cvR^2)"|
mdata$variable=="Full"),]
mdata_mod$value[which(mdata_mod$Row=="Task indep.")] = -mdata_mod$value[mdata_mod$Row=="Task indep."]
#Sort variables
for_sorting_mvmt = mdata_mod[mdata_mod$monkey=="K" & mdata_mod$Row=="Task aligned",]
agg_df = aggregate(for_sorting_mvmt$value, list(for_sorting_mvmt$variable), FUN=median)
sorted_df = agg_df[order(agg_df$x),]
var_levels= as.character(sorted_df$Group.1)
mdata_mod %>%
#mutate(variable = fct_reorder(variable, value, .fun='max')) %>%
arrange(variable) %>%
mutate(variable = factor(variable, levels=var_levels)) %>%
ggplot(aes(x=variable, y=value))+
#geom_point(size=2)+
# geom_line(aes(x=session, y=value,color=session))+
# geom_boxplot(aes(x=variable, y=value, fill=Row, colour=monkey),position="identity",
#              width = 0.35,outlier.shape = NA)+
geom_boxplot(aes(x=variable, y=value, fill=Row),position="identity",
width = 0.35,outlier.shape = NA)+
theme_light(base_size=12)+ scale_fill_manual(values=c("cadetblue2", "blue"))+
theme(axis.text.x = element_text(angle = 45, hjust=1.1))+ labs(fill="")+
geom_hline(yintercept=0)+facet_grid(~monkey)+
ylab('cvRsq')+xlab('')+ylim(c(-0.1,0.2))
ggsave(paste('Aligned_vs_independent',suffix,'.eps', sep=""))
ggsave(paste('Aligned_vs_independent',suffix,'.eps', sep=""))
remotes::install_github("JHart96/bisonR")
######################################################
## Fit edge model
######################################################
load("Proximity_df.RData")
######################################################
## Fit edge model
######################################################
dataPath = '~/Documents/GitHub/Cayo-Maria-Survival/Data/Data All Cleaned/BehavioralDataFiles/'
load("Proximity_df.RData")
######################################################
## Fit edge model
######################################################
setwd('~/Documents/GitHub/Cayo-Maria-Survival/Data/Data All Cleaned/BehavioralDataFiles/')
load("Proximity_df.RData")
#Set priors
priors <- get_default_priors("count")
priors
#Fit model
fit_edge <- edge_model(
(count | total_obs_time) ~ dyad(ID1, ID2),
data=df_obs_agg,
data_type="count",
priors=priors
)
View(df_obs_agg)
fit_edge <- edge_model(
(count | total_samples) ~ dyad(ID1, ID2),
data=df_obs_agg,
data_type="binary",
priors=priors
)
View(priors)
#Set priors
priors <- get_default_priors("binary")
priors
#Fit model
fit_edge <- edge_model(
(count | total_samples) ~ dyad(ID1, ID2),
data=df_obs_agg,
data_type="binary",
priors=priors
)
